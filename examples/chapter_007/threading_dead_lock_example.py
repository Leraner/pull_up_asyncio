import time
from threading import Lock, Thread


# Это называется взаимоблокировка. Два потока, друг друга блокируют
# Тут уже не поможет ни Lock, ни RLock, потому что RLock - для потока,
# который сам в себе захватывает блокировку.

# Каждый метод ждет, пока другой освободит ресурс, и мы не можем продвинуться ни на шаг.


# Есть два метода исправления этой ошибки

# 1) Метод страуса. Идея такого подхода заключается в предположении,
#   что взаимная блокировка происходит очень редко и в принципе на неё можно забить.
#   Это конечно не исправление и эта стратегия конечно не идеальная, но здесь фокус идёт на то,
#   что такая блокировка - редкое событие
#
# 2) Сделать так, чтобы блокировки в обоих местах захватывались в одном и том же порядке.

a_lock = Lock()
b_lock = Lock()


def a():
    with a_lock:
        print("Захвачена блокировка из метода a!")
        time.sleep(1)
        with b_lock:
            print("Захвачены обе блокировки из метода а!")


def b():
    with b_lock:
        print("Захвачена блокировка из метода b!")
        time.sleep(1)
        with a_lock:
            print("Захвачены обе блокировки из метода b!")


thread_1 = Thread(target=a)
thread_2 = Thread(target=b)

thread_1.start()
thread_2.start()

thread_1.join()
thread_2.join()
